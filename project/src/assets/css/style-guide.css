/* normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

/**
 * Profound Grid
 * 
 * Built in Sass (SCSS) this responsive/adaptive grid supports both fixed and fluid layouts, 
 * relative and fixed gutters, as well as your choice of semantic markup or generic '.grid-x' classes.
 * 
 * The biggest difference to other grid systems is the use of negative margins for column
 * placements, avoiding the subpixel rounding issues that usually break/uglify fluid layouts
 * in some browsers.
 * 
 * Nested columns are supported too, without having to reset the grid on each level. 
 *
 * Credits/Inspiration:
 * -------------------
 * Semantic Grid: http://www.semantic.gs
 * Susy: http://susy.oddbird.net
 * Negative Grid: http://chrisplaneta.com/freebies/negativegrid-fluid-css-grid-by-chris-planeta/
 *
 * @author Profound Creative Studio
 * @url http://www.profoundgrid.com
 * @url http://www.weareprofound.com 
 */
/**
 * Clearfix
 */
/**
 * Legacy Clearfix
 */
/**
 * Establish the grid-containing element.
 */
/**
 * Align an element to the grid.
 */
/**
 * Apply to any column to make it the last one of the current row.
 */
html {
  font-size: 75%;
  -webkit-font-smoothing: antialiased; }

@media only screen and (min-width: 320px) {
  html {
    font-size: 81.25%; } }

@media only screen and (min-width: 480px) {
  html {
    font-size: 87.5%; } }

@media only screen and (min-width: 640px) {
  html {
    font-size: 100%; } }

@media only screen and (min-width: 960px) {
  html {
    font-size: 112.5%; } }

@media only screen and (min-width: 1440px) {
  html {
    font-size: 125%; } }

body {
  font-size: 1rem;
  line-height: 1.5;
  font-weight: 200;
  color: #666666;
  font-family: "Gill Sans MT", "Gill Sans", Tahoma, Geneva, sans-serif; }

h1, h2, h3, h4, h5, h6 {
  color: #2ecc71;
  font-weight: 200;
  text-rendering: optimizeLegibility;
  font-family: "Gill Sans MT", "Gill Sans", Tahoma, Geneva, sans-serif; }

h1 {
  font-size: 2.375rem;
  line-height: 3rem;
  margin-top: 3rem;
  margin-bottom: 1.5rem; }

h2 {
  font-size: 1.75rem;
  line-height: 3rem;
  margin-top: 3rem;
  margin-bottom: 1.5rem; }

h3 {
  font-size: 1.3125rem;
  line-height: 1.5rem;
  margin-top: 1.5rem;
  margin-bottom: 1.5rem; }

h4, h5, h6 {
  font-size: 1rem;
  line-height: 1.5rem;
  margin-top: 1.5rem;
  margin-bottom: 1.5rem; }

p {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem; }

ul, ol {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem; }

ul ul, ol ol, ul ol, ol ul {
  margin-top: 0;
  margin-bottom: 0; }

dl dt {
  font-weight: 700; }
dl dd {
  font-style: italic; }

table {
  border-collapse: collapse;
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
  position: relative;
  table-layout: fixed;
  width: 100%; }
  table tr, table th, table td {
    margin: 0; }
  table td {
    line-height: 1.5; }

thead, tfoot, tbody {
  width: 100%; }

caption {
  line-height: 1.5; }

blockquote {
  padding: 0 0 0 1.5rem;
  margin: 1.5rem 0 1.5rem 0;
  font-style: italic; }

blockquote > p {
  padding: 0; }

a {
  text-decoration: none;
  color: #666; }
  a:hover {
    text-decoration: underline;
    color: #222; }

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #666666;
  margin: 1.5rem 0 1.5rem 0;
  padding: 0; }

sup, sub {
  vertical-align: baseline;
  position: relative;
  top: -0.4rem; }

sub {
  top: 0.4rem; }

b {
  line-height: 1; }

small {
  line-height: 1; }

strong {
  font-weight: 700;
  line-height: 1; }

rem, dfn, cite, q {
  line-height: 1.5; }

dfn {
  font-weight: 700; }

pre, code, tt, kbd {
  font-family: Monaco, "Lucida Sans Typewriter", Consolas, "Courier New", monospace; }

pre {
  white-space: pre;
  margin-top: 1.5rem;
  margin-bottom: 1.5rem; }

pre, code, tt {
  font-size: 0.9rem;
  line-height: 1.5; }

tt {
  display: block;
  margin: 1.5rem 0; }

kbd {
  position: relative;
  top: -1px;
  margin-bottom: 1px;
  padding: 0 0;
  font-size: 0.9rem; }

@media only screen and (min-width: 480px) {
  kbd {
    padding: 0.1rem 0rem;
    font-size: 0.75rem; } }

pre {
  word-break: break-all;
  word-wrap: break-word;
  white-space: pre;
  white-space: -moz-pre-wrap;
  white-space: pre-wrap;
  white-space: pre\9; }

/*
    pesticide v0.1.0 . @mrmrs . MIT
*/
.main {
  width: 100%; }

.hero {
  background-color: #2ecc71;
  overflow: hidden;
  width: 100%;
  margin: 0 0%; }
  .hero .logo {
    color: #fff;
    padding: 1rem;
    border: 4px solid #fefefe;
    margin: 2rem auto 1rem auto;
    display: block;
    max-width: 100px;
    text-align: center;
    font-size: 1.5rem;
    clear: both; }
    .hero .logo:hover {
      text-decoration: none; }
  .hero .mission {
    color: #fefefe;
    text-align: center;
    margin-bottom: 2rem;
    float: left;
    margin-right: -100%;
    width: 100%; }
    .hero .mission h1 {
      color: #fefefe;
      padding: 0 8% 0 8%; }
    @media screen and (min-width: 640px) {
      .hero .mission {
        float: left;
        margin-right: -100%;
        width: 49%;
        margin-left: 25.5%; } }

.middle {
  width: 100%;
  margin: 0 0%; }

.row {
  clear: both;
  overflow: hidden; }

.elements {
  max-width: 1200px;
  margin: auto;
  overflow: hidden;
  padding: 0 2%; }

/* Helper Class: Container */
.row {
  width: 100%;
  margin: 0 0%; }

/* Helper Class: Columns */
.col1 {
  float: left;
  margin-right: -100%;
  width: 6.5%; }

.col2 {
  float: left;
  margin-right: -100%;
  width: 15%; }

.col3 {
  float: left;
  margin-right: -100%;
  width: 23.5%; }

.col4 {
  float: left;
  margin-right: -100%;
  width: 32%; }

.col5 {
  float: left;
  margin-right: -100%;
  width: 40.5%; }

.col6 {
  float: left;
  margin-right: -100%;
  width: 49%; }

.col7 {
  float: left;
  margin-right: -100%;
  width: 57.5%; }

.col8 {
  float: left;
  margin-right: -100%;
  width: 66%; }

.col9 {
  float: left;
  margin-right: -100%;
  width: 74.5%; }

.col10 {
  float: left;
  margin-right: -100%;
  width: 83%; }

.col11 {
  float: left;
  margin-right: -100%;
  width: 91.5%; }

.col12 {
  float: left;
  margin-right: -100%;
  width: 100%; }

/* Helper Class: Horizontal Position */
.push0 {
  margin-left: 0%; }

.push1 {
  margin-left: 8.5%; }

.push2 {
  margin-left: 17%; }

.push3 {
  margin-left: 25.5%; }

.push4 {
  margin-left: 34%; }

.push5 {
  margin-left: 42.5%; }

.push6 {
  margin-left: 51%; }

.push7 {
  margin-left: 59.5%; }

.push8 {
  margin-left: 68%; }

.push9 {
  margin-left: 76.5%; }

.push10 {
  margin-left: 85%; }

.push11 {
  margin-left: 93.5%; }

.colors {
  overflow: hidden; }
  .colors .swatch {
    float: left;
    margin-right: -100%;
    width: 100%;
    clear: both; }
  @media screen and (min-width: 640px) {
    .colors .swatch {
      float: left;
      margin-right: -100%;
      width: 32%;
      clear: none; }
    .colors .swatch:nth-child(3n+1) {
      margin-left: 0%;
      margin-bottom: 2%;
      clear: both;
      overflow: hidden;
      *zoom: 1; }
    .colors .swatch:nth-child(3n+2) {
      margin-left: 34%;
      margin-bottom: 2%;
      clear: none; }
    .colors .swatch:nth-child(3n+3) {
      margin-left: 68%;
      margin-bottom: 2%;
      clear: none; } }
  .colors span {
    text-align: center;
    color: #fff;
    font-size: 80%;
    font-weight: 700;
    height: 60px;
    line-height: 60px;
    border-radius: 5px;
    display: block;
    width: 100%;
    margin: 0 0 2% 0; }
  .colors .bright span {
    background-color: #eeeeee;
    color: #666666; }
  .colors .medium span {
    background-color: #666666; }
  .colors .dark span {
    background-color: #222222; }
  .colors .primary span {
    background-color: #2ecc71; }
  .colors .secondary span {
    background-color: #2c3e50; }
  .colors .tertiary span {
    background-color: #42b3c5; }
  .colors .positive span {
    background-color: #16a085; }
  .colors .negative span {
    background-color: #c0392b; }
  .colors .warning span {
    background-color: #f39c12; }

blockquote {
  color: #666666; }

.inline {
  width: 100%;
  margin: 0 0%;
  overflow: hidden;
  margin: 0 0 0 0;
  padding: 0 0 0 0;
  text-align: center; }
  .inline li {
    float: left;
    margin-right: -100%;
    width: 32%;
    clear: none;
    list-style: none; }
  .inline li:nth-child(3n+1) {
    margin-left: 0%;
    margin-bottom: 2%;
    clear: both;
    overflow: hidden;
    *zoom: 1; }
  .inline li:nth-child(3n+2) {
    margin-left: 34%;
    margin-bottom: 2%;
    clear: none; }
  .inline li:nth-child(3n+3) {
    margin-left: 68%;
    margin-bottom: 2%;
    clear: none; }

.gridexamples .grid1 span, .gridexamples .grid2 span, .gridexamples .grid3 span, .gridexamples .grid4 span {
  background-color: #2ecc71;
  text-align: center;
  color: #fff;
  font-size: 80%;
  font-weight: 700;
  height: 60px;
  line-height: 60px;
  border-radius: 5px;
  display: block;
  width: 100%; }

.col {
  float: left;
  margin-right: -100%;
  width: 100%; }

.col:nth-child(1n+1) {
  margin-left: 0%;
  margin-bottom: 2%;
  clear: both;
  overflow: hidden;
  *zoom: 1; }

@media screen and (min-width: 640px) {
  .grid1 .col {
    float: left;
    margin-right: -100%;
    width: 6.5%; }
  .grid1 .col:nth-child(12n+1) {
    margin-left: 0%;
    margin-bottom: 2%;
    clear: both;
    overflow: hidden;
    *zoom: 1; }
  .grid1 .col:nth-child(12n+2) {
    margin-left: 8.5%;
    margin-bottom: 2%;
    clear: none; }
  .grid1 .col:nth-child(12n+3) {
    margin-left: 17%;
    margin-bottom: 2%;
    clear: none; }
  .grid1 .col:nth-child(12n+4) {
    margin-left: 25.5%;
    margin-bottom: 2%;
    clear: none; }
  .grid1 .col:nth-child(12n+5) {
    margin-left: 34%;
    margin-bottom: 2%;
    clear: none; }
  .grid1 .col:nth-child(12n+6) {
    margin-left: 42.5%;
    margin-bottom: 2%;
    clear: none; }
  .grid1 .col:nth-child(12n+7) {
    margin-left: 51%;
    margin-bottom: 2%;
    clear: none; }
  .grid1 .col:nth-child(12n+8) {
    margin-left: 59.5%;
    margin-bottom: 2%;
    clear: none; }
  .grid1 .col:nth-child(12n+9) {
    margin-left: 68%;
    margin-bottom: 2%;
    clear: none; }
  .grid1 .col:nth-child(12n+10) {
    margin-left: 76.5%;
    margin-bottom: 2%;
    clear: none; }
  .grid1 .col:nth-child(12n+11) {
    margin-left: 85%;
    margin-bottom: 2%;
    clear: none; }
  .grid1 .col:nth-child(12n+12) {
    margin-left: 93.5%;
    margin-bottom: 2%;
    clear: none; } }

@media screen and (min-width: 640px) {
  .grid4 .col {
    float: left;
    margin-right: -100%;
    width: 32%; }
  .grid4 .col:nth-child(3n+1) {
    margin-left: 0%;
    margin-bottom: 2%;
    clear: both;
    overflow: hidden;
    *zoom: 1; }
  .grid4 .col:nth-child(3n+2) {
    margin-left: 34%;
    margin-bottom: 2%;
    clear: none; }
  .grid4 .col:nth-child(3n+3) {
    margin-left: 68%;
    margin-bottom: 2%;
    clear: none; } }

@media screen and (min-width: 640px) {
  .grid6 .col {
    float: left;
    margin-right: -100%;
    width: 49%; }
  .grid6 .col:nth-child(2n+1) {
    margin-left: 0%;
    margin-bottom: 2%;
    clear: both;
    overflow: hidden;
    *zoom: 1; }
  .grid6 .col:nth-child(2n+2) {
    margin-left: 51%;
    margin-bottom: 2%;
    clear: none; } }

video {
  width: 100% !important;
  height: auto !important; }

audio {
  width: 100%; }

.map {
  position: relative;
  padding-bottom: 56.25%;
  padding-top: 30px;
  height: 0;
  overflow: hidden; }
  .map iframe, .map object, .map embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0; }

figure {
  margin: 0 0 0 0; }
  figure img {
    width: 100%;
    height: auto; }

.lists .un, .lists .ord {
  float: left;
  margin-right: -100%;
  width: 49%; }
.lists .un {
  margin-left: 51%; }

footer {
  background-color: #eee; }

.foot {
  width: 96%;
  margin: 0 2%;
  clear: both;
  height: 40px;
  line-height: 40px;
  font-size: 14px; }
  .foot .love span {
    color: #e74c3c; }
  .foot .block {
    float: left;
    margin-right: -100%;
    width: 100%;
    clear: both;
    text-align: center; }
  @media screen and (min-width: 480px) {
    .foot .block:nth-child(2n+1) {
      margin-left: 0%;
      margin-bottom: 2%;
      clear: both;
      overflow: hidden;
      *zoom: 1; }
    .foot .block:nth-child(2n+2) {
      margin-left: 51%;
      margin-bottom: 2%;
      clear: none; }
    .foot .block {
      float: left;
      margin-right: -100%;
      width: 49%;
      clear: none;
      margin-bottom: 0;
      padding: 0 0 0 0; }
    .foot .footlinks {
      text-align: left;
      margin-bottom: 0 !important; }
      .foot .footlinks a {
        color: #222; }
        .foot .footlinks a:hover {
          text-decoration: none; }
    .foot .love {
      text-align: right;
      margin-bottom: 0 !important; }
      .foot .love a {
        color: #222; }
        .foot .love a:hover {
          text-decoration: none; } }

/*# sourceMappingURL=data:application/json;base64,*/